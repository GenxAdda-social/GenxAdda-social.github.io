{"version":3,"sources":["webpack:///../../../src/components/VWindow/VWindow.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/directives/touch/index.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["name","provide","windowGroup","this","directives","Touch","props","activeClass","type","default","continuous","mandatory","nextIcon","Boolean","prevIcon","reverse","undefined","showArrows","showArrowsOnHover","touch","touchless","value","required","vertical","data","changedByDelimiters","internalHeight","transitionHeight","transitionCount","isBooted","isReverse","computed","isActive","classes","computedTransition","axis","$vuetify","rtl","direction","hasActiveItems","items","find","item","hasNext","internalIndex","length","hasPrev","findIndex","internalReverse","watch","mounted","window","methods","genContainer","children","$slots","$createElement","staticClass","class","style","height","genIcon","VBtn","icon","attrs","lang","t","on","click","fn","VIcon","large","genControlIcons","icons","getNextIndex","nextIndex","index","getPrevIndex","prevIndex","next","getValue","prev","lastIndex","updateReverse","val","render","left","right","end","e","start","h","isDark","handleGesture","wrapper","touchendY","dirRatio","minDistance","touchendX","Math","touchstartX","touchstartY","event","Object","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","up","down","move","touchstart","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind","mobileBreakpoint","Number","breakpoint","validator","v","isNaN","includes","String","isMobile","mobile","mobileWidth","parseInt","isNumber","width","created","$attrs","hasOwnProperty","BaseSlideGroup","mixins","Resize","centerActive","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","__cachedNext","genTransition","__cachedPrev","hasAffixes","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","key","genContent","ref","genData","onResize","location","upperLocation","hasAffix","disabled","genPrev","genWrapper","calculateNewOffset","sign","newAbosluteOffset","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","slideGroup","tabsBar","themeClasses","$route","callSlider","onRouteChange","newPath","oldPath","oldVal","hasNew","hasOld","role","setBackgroundColor","baseMixins","alignWithTitle","backgroundColor","centered","fixedTabs","grow","hideSlider","iconsAndText","optional","sliderColor","sliderSize","slider","top","transitionTime","isReversed","sliderStyles","transition","computedColor","selectedItems","activeTab","scrollWidth","genBar","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","i","modifiers","quiet"],"mappings":"qSAiBe,gBAAqB,CAClCA,KADkC,WAGlCC,QAHkC,WAIhC,MAAO,CACLC,YAAaC,OAIjBC,WAAY,CAAEC,MAAA,QAEdC,MAAO,CACLC,YAAa,CACXC,KADW,OAEXC,QAAS,yBAEXC,WALK,QAMLC,UAAW,CACTH,KADS,QAETC,SAAS,GAEXG,SAAU,CACRJ,KAAM,CAACK,QADC,QAERJ,QAAS,SAEXK,SAAU,CACRN,KAAM,CAACK,QADC,QAERJ,QAAS,SAEXM,QAAS,CACPP,KADO,QAEPC,aAASO,GAEXC,WAtBK,QAuBLC,kBAvBK,QAwBLC,MAxBK,OAyBLC,UAzBK,QA0BLC,MAAO,CACLC,UAAU,GAEZC,SAAUV,SAGZW,KA3CkC,WA4ChC,MAAO,CACLC,qBADK,EAELC,oBAFK,EAGLC,sBAHK,EAILC,gBAJK,EAKLC,UALK,EAMLC,WAAW,IAIfC,SAAU,CACRC,SADQ,WAEN,OAAO7B,KAAKyB,gBAAZ,GAEFK,QAJQ,WAKN,wCACK,qCADE,OAAP,IAEE,iCAAkC9B,KAAKe,qBAG3CgB,mBAVQ,WAWN,IAAK/B,KAAL,SAAoB,MAAO,GAE3B,IAAMgC,EAAOhC,KAAKoB,SAAW,IAA7B,IACMR,EAAUZ,KAAKiC,SAASC,KAAd,MAAqBF,GAAgBhC,KAArC,gBAA4DA,KAA5E,gBACMmC,EAAYvB,EAAU,WAA5B,GAEA,yBAAmBoB,GAAnB,yBAEFI,eAnBQ,WAoBN,OAAO1B,QACLV,KAAKqC,MAAMC,MAAK,SAAAC,GAAI,OAAKA,EAD3B,cAIFC,QAxBQ,WAyBN,OAAOxC,KAAKO,YAAcP,KAAKyC,cAAgBzC,KAAKqC,MAAMK,OAA1D,GAEFC,QA3BQ,WA4BN,OAAO3C,KAAKO,YAAcP,KAAKyC,cAA/B,GAEFA,cA9BQ,WA8BK,WACX,OAAOzC,KAAKqC,MAAMO,WAAU,cAC1B,OAAO,kBAAuB,aAA9B,OAGJC,gBAnCQ,WAoCN,OAAO7C,KAAKY,SAAWZ,KAAhB,UAAiCA,KAAxC,YAIJ8C,MAAO,CACLL,cAAe,iBAGjBM,QAlGkC,WAkG3B,WACLC,OAAA,uBAA6B,kBAAO,YAApC,MAGFC,QAAS,CACPC,aADO,WAEL,IAAMC,EAAW,CAACnD,KAAKoD,OAAvB,SAMA,OAJIpD,KAAJ,YACEmD,EAAA,KAAcnD,KAAd,mBAGKA,KAAKqD,eAAe,MAAO,CAChCC,YADgC,sBAEhCC,MAAO,CACL,iCAAkCvD,KAAK6B,UAEzC2B,MAAO,CACLC,OAAQzD,KAAKuB,gBAAkBvB,KAAKwB,mBANxC,IAUFkC,QAlBO,SAkBA,OAGS,WAEd,OAAO1D,KAAKqD,eAAe,MAAO,CAChCC,YAAa,aAAF,OAAenB,IACzB,CACDnC,KAAKqD,eAAeM,EAApB,KAA0B,CACxBxD,MAAO,CAAEyD,MAAM,GACfC,MAAO,CACL,aAAc7D,KAAKiC,SAAS6B,KAAKC,EAAE,qBAArB,YAEhBC,GAAI,CACFC,MAAO,WACL,yBACAC,OAGH,CACDlE,KAAKqD,eAAec,EAApB,KAA2B,CACzBhE,MAAO,CAAEiE,OAAO,IAhBtB,QAqBFC,gBA5CO,WA6CL,IAAMC,EAAN,GAEM3D,EAAWX,KAAKiC,SAASC,IAC3BlC,KADa,SAEbA,KAFJ,SAKA,GACEA,KAAK2C,SAAL,GADF,kBAGShC,EACP,CACA,IAAMiD,EAAO5D,KAAK0D,QAAQ,OAAQ/C,EAAUX,KAA5C,MACA4D,GAAQU,EAAA,KAARV,GAGF,IAAMnD,EAAWT,KAAKiC,SAASC,IAC3BlC,KADa,SAEbA,KAFJ,SAKA,GACEA,KAAKwC,SAAL,GADF,kBAGS/B,EACP,CACA,IAAM,EAAOT,KAAK0D,QAAQ,OAAQjD,EAAUT,KAA5C,MACA,GAAQsE,EAAA,KAAR,GAGF,UAEFC,aA7EO,SA6EK,GACV,IAAMC,GAAaC,EAAD,GAAczE,KAAKqC,MAArC,OACME,EAAOvC,KAAKqC,MAAlB,GAEA,OAAIE,EAAJ,SAA0BvC,KAAKuE,aAAZ,GAEnB,GAEFG,aArFO,SAqFK,GACV,IAAMC,GAAaF,EAAQzE,KAAKqC,MAAb,OAAD,GAAkCrC,KAAKqC,MAAzD,OACME,EAAOvC,KAAKqC,MAAlB,GAEA,OAAIE,EAAJ,SAA0BvC,KAAK0E,aAAZ,GAEnB,GAEFE,KA7FO,WAiGL,GAHA5E,KAAA,UAAiBA,KAAKiC,SAAtB,IAGKjC,KAAD,gBAAyBA,KAA7B,SAEA,IAAMwE,EAAYxE,KAAKuE,aAAavE,KAApC,eACMuC,EAAOvC,KAAKqC,MAAlB,GAEArC,KAAA,cAAqBA,KAAK6E,SAAStC,EAAnC,KAEFuC,KAxGO,WA4GL,GAHA9E,KAAA,WAAkBA,KAAKiC,SAAvB,IAGKjC,KAAD,gBAAyBA,KAA7B,SAEA,IAAM+E,EAAY/E,KAAK0E,aAAa1E,KAApC,eACMuC,EAAOvC,KAAKqC,MAAlB,GAEArC,KAAA,cAAqBA,KAAK6E,SAAStC,EAAnC,KAEFyC,cAnHO,SAmHM,KACPhF,KAAJ,oBACEA,KAAA,uBAIFA,KAAA,UAAiBiF,EAAjB,IAIJC,OAnOkC,SAmO5B,GAAG,WACD7D,EAAO,CACXiC,YADW,WAEXC,MAAOvD,KAFI,QAGXC,WAAY,IAGd,IAAKD,KAAL,UAAqB,CACnB,IAAMkB,EAAQlB,KAAKgB,OAAS,CAC1BmE,KAAM,WACJ,eAAoB,EAApB,OAAkC,EAAlC,QAEFC,MAAO,WACL,eAAoB,EAApB,OAAkC,EAAlC,QAEFC,IAAM,SAAAC,GACJA,EAAA,mBAEFC,MAAQ,SAAAD,GACNA,EAAA,oBAIJjE,EAAA,gBAAqB,CACnBxB,KADmB,QAEnBqB,UAIJ,OAAOsE,EAAE,MAAOnE,EAAM,CAACrB,KAAvB,oBC1QW,gBAAe,CAC5BH,KAD4B,eAG5BM,MAAO,CACLK,UAAW,CACTH,KADS,QAETC,SAAS,IAIbsB,SAAU,CACRE,QADQ,WAEN,wCACK,gCADE,OAAP,IAEE,gBAAgB,KAGpB2D,OAPQ,WAQN,OAAOzF,KAAP,aAIJiD,QAAS,CACP4B,SADO,SACC,KACN,OAAOtC,EAAA,IAAW,4CAAlB,Q,kCC/BN,gBAGA,e,sECWMmD,EAAiB,SAAAC,GAAyB,IACxC,EAAN,EAAM,cAAN,EAAM,YAAN,EAAM,YAAuCC,EAA7C,EAA6CA,UACvCC,EAAN,GACMC,EAAN,GACAH,EAAA,QAAkBI,EAAlB,EACAJ,EAAA,QAAkBC,EAAlB,EAEII,KAAA,IAASL,EAAT,SAA4BE,EAAWG,KAAA,IAASL,EAApD,WACEA,EAAA,MAAiBI,EAAYE,EAA7B,GAA2DN,EAAA,KAA3DA,GACAA,EAAA,OAAkBI,EAAYE,EAA9B,GAA4DN,EAAA,MAA5DA,IAGEK,KAAA,IAASL,EAAT,SAA4BE,EAAWG,KAAA,IAASL,EAApD,WACEA,EAAA,IAAeC,EAAYM,EAA3B,GAAyDP,EAAA,GAAzDA,GACAA,EAAA,MAAiBC,EAAYM,EAA7B,GAA2DP,EAAA,KAA3DA,KAIJ,SAAS,EAAT,KACE,IAAM3E,EAAQmF,EAAA,eAAd,GACAR,EAAA,YAAsB3E,EAAtB,QACA2E,EAAA,YAAsB3E,EAAtB,QAEA2E,EAAA,OACEA,EAAA,MAAcS,OAAA,SADhBT,IAIF,SAAS,EAAT,KACE,IAAM3E,EAAQmF,EAAA,eAAd,GACAR,EAAA,UAAoB3E,EAApB,QACA2E,EAAA,UAAoB3E,EAApB,QAEA2E,EAAA,KACEA,EAAA,IAAYS,OAAA,SADdT,IAGAD,EAAA,GAGF,SAAS,EAAT,KACE,IAAM1E,EAAQmF,EAAA,eAAd,GACAR,EAAA,WAAqB3E,EAArB,QACA2E,EAAA,WAAqB3E,EAArB,QAEA2E,EAAA,MAAgBA,EAAA,KAAaS,OAAA,SAA7BT,IAGF,SAASU,EAAT,GACE,IAAMV,EAAU,CACdM,YADc,EAEdC,YAFc,EAGdH,UAHc,EAIdH,UAJc,EAKdU,WALc,EAMdC,WANc,EAOdC,QAPc,EAQdC,QARc,EASdtB,KAAMjE,EATQ,KAUdkE,MAAOlE,EAVO,MAWdwF,GAAIxF,EAXU,GAYdyF,KAAMzF,EAZQ,KAadqE,MAAOrE,EAbO,MAcd0F,KAAM1F,EAdQ,KAedmE,IAAKnE,EAAMmE,KAGb,MAAO,CACLwB,WAAa,SAAAvB,GAAD,OAAmB,EAAWA,EADrC,IAELwB,SAAW,SAAAxB,GAAD,OAAmB,EAASA,EAFjC,IAGLyB,UAAY,SAAAzB,GAAD,OAAmB,EAAUA,EAAGK,KAI/C,SAASqB,EAAT,OACE,IAAM9F,EAAQ+F,EAAd,MACMC,EAAShG,EAAA,OAAeiG,EAAf,cAAf,EACMC,EAAUlG,EAAA,SAAiB,CAAEmG,SAAS,GAG5C,MAEA,IAAMC,EAAWjB,EAAeY,EAAhC,OACAC,EAAA,eAAwBd,OAAOc,EAA/B,gBACAA,EAAA,eAAuBK,EAAA,QAAvB,QAEA,2BAAuB,SAAAC,GACrBN,EAAA,mBAAmCI,EAAnC,UAIJ,SAASG,EAAT,OACE,IAAMP,EAASD,EAAA,aAAwBE,EAAxB,cAAf,EACA,GAAKD,GAAWA,EAAhB,gBAEA,IAAMI,EAAWJ,EAAA,eAAsBK,EAAA,QAAvC,MACA,2BAAuB,SAAAC,GACrBN,EAAA,sBAAsCI,EAAtC,cAEKJ,EAAA,eAAsBK,EAAA,QAA7B,OAGK,IAAMrH,EAAQ,CACnB8G,WACAS,UAGF,U,kCCvHA,gBAUe,2BAAW,CACxB5H,KADwB,eAGxBwB,KAAM,iBAAO,CACXK,UAAU,IAGZqB,QAPwB,WAOjB,WAILC,OAAA,uBAA6B,WAC3B,yCACA,qB,6FCjBS,2BAAW,CACxBnD,KADwB,SAGxBM,MAAO,CACLuH,iBAAkB,CAChBrH,KAAM,CAACsH,OADS,QAEhBrH,QAFgB,WAKd,OAAON,KAAKiC,SACRjC,KAAKiC,SAAS2F,WADX,sBAAP,GAIFC,UAAW,SAAAC,GAAC,OACTC,MAAMJ,OAAP,KACA,CAAC,KAAM,KAAM,KAAM,KAAM,MAAMK,SAASC,OAAxC,OAKNrG,SAAU,CACRsG,SADQ,WACA,MAMFlI,KAAKiC,SANH,WACA,EADA,EACA,SADA,EACA,QADA,EACA,KAIJyF,EALI,EAKJA,iBAKF,GAAIA,IAAqB1H,KAAzB,iBAAgD,OAAOmI,EAEvD,IAAMC,EAAcC,SAASrI,KAAD,iBAA5B,IACMsI,GAAYP,MAAlB,GAEA,OAAOO,EACHC,EADW,EAEX1I,IAASG,KAFb,mBAMJwI,QA1CwB,WA4ClBxI,KAAKyI,OAAOC,eAAhB,uBACE,eAAU,qBAAsB,oBAAhC,U,6NCVOC,EAAiB,OAAAC,EAAA,MAAM,OAAN,eAWrB,CACP/I,KADO,mBAGPI,WAAY,CACV4I,OAAA,OACA3I,MAAA,QAGFC,MAAO,CACLC,YAAa,CACXC,KADW,OAEXC,QAAS,wBAEXwI,aALK,QAMLrI,SAAU,CACRJ,KADQ,OAERC,QAAS,SAEXK,SAAU,CACRN,KADQ,OAERC,QAAS,SAEXQ,WAAY,CACVT,KAAM,CAACK,QADG,QAEVmH,UAAW,SAAAC,GAAC,MACG,mBAANA,GAAmB,CAAC,SAAD,mCAShCzG,KAAM,iBAAO,CACX0H,oBADW,EAEXC,eAFW,EAGXC,cAHW,EAIXC,OAJW,EAKXC,aALW,EAMXC,OAAQ,CACNC,QADM,EAEN1D,QAAS,KAIb/D,SAAU,CACR0H,aADQ,WAEN,OAAOtJ,KAAKuJ,cAAZ,SAEFC,aAJQ,WAKN,OAAOxJ,KAAKuJ,cAAZ,SAEFzH,QAPQ,WAQN,wCACK,qCADE,OAAP,IAEE,iBAFK,EAGL,6BAA8B9B,KAHzB,WAIL,gCAAiCA,KAAKgJ,iBAG1CS,WAfQ,WAgBN,OAAQzJ,KAAR,YAEE,aAAe,SAGf,cAAgB,OAAQA,KAAR,SAIhB,OAAW,OAAOA,KAAP,cAGX,aAAe,OACbA,KAAKkI,UACLlI,KAFa,cAQf,QAAS,OACNA,KAAD,UACAA,KAFO,gBAMbwC,QA1CQ,WA2CN,IAAKxC,KAAL,WAAsB,OAAO,EADxB,MAGwBA,KAHxB,OAGC,EAHD,EAGC,QAAW2F,EAHZ,EAGYA,QAGjB,OAAO0D,EAAUrD,KAAA,IAAShG,KAAT,cAAjB,GAEF2C,QAlDQ,WAmDN,OAAO3C,KAAKyJ,YAAZ,IAA0BzJ,KAAKmJ,eAInCrG,MAAO,CACL4G,cADK,YAKLV,cALK,YAMLG,aANK,SAMO,GACVnJ,KAAA,+DAIJ2J,aAhHO,WAiHL3J,KAAA,qBAA4BA,KAAK4J,WAAN,IAA3B,QAGFC,QApHO,WAqHD7J,KAAK+I,uBAAyB/I,KAAK4J,WAAN,IAAjC,QACA5J,KAAA,aAGFiD,QAAS,CAEP6G,QAFO,WAEA,WACCC,EAAO/J,KAAKgK,aAAapF,KAC3B5E,KAAKgK,aAAapF,KADT,IAET5E,KAAKoD,OAAOwB,MAAQ5E,KAFxB,aAIA,OAAOA,KAAKqD,eAAe,MAAO,CAChCC,YADgC,sBAEhCC,MAAO,CACL,iCAAkCvD,KAAKwC,SAEzCwB,GAAI,CACFC,MAAO,kBAAM,yBAEfgG,IAAK,QACJ,CATH,KAWFC,WAlBO,WAmBL,OAAOlK,KAAKqD,eAAe,MAAO,CAChCC,YADgC,yBAEhC6G,IAAK,WACJnK,KAAKoD,OAHR,UAKFgH,QAxBO,WAyBL,MAAO,CACL7G,MAAOvD,KADF,QAELC,WAAY,CAAC,CACXJ,KADW,SAEXqB,MAAOlB,KAAKqK,aAIlB3G,QAjCO,SAiCA,GACL,IAAIE,EAAJ,EAEI5D,KAAKiC,SAASC,KAAlB,SAAyBoI,EACvB1G,EAAA,OACS5D,KAAKiC,SAASC,KAAlB,SAAyBoI,IAC9B1G,EAAA,QAGF,IAAM2G,EAAgB,GAAH,OAAMD,EAAA,kBAAN,OAAkCA,EAAA,MAArD,IACME,EAAYxK,KAAA,aAAlB,IAEA,OACGA,KAAD,YADF,EAKOA,KAAKqD,eAAec,EAApB,KAA2B,CAChChE,MAAO,CACLsK,UAAWD,IAEXxK,KAAA,UAJJ,EAII,UANK,MASX0K,QAzDO,WAyDA,WACCX,EAAO/J,KAAKgK,aAAalF,KAC3B9E,KAAKgK,aAAalF,KADT,IAET9E,KAAKoD,OAAO0B,MAAQ9E,KAFxB,aAIA,OAAOA,KAAKqD,eAAe,MAAO,CAChCC,YADgC,sBAEhCC,MAAO,CACL,iCAAkCvD,KAAK2C,SAEzCqB,GAAI,CACFC,MAAO,kBAAM,yBAEfgG,IAAK,QACJ,CATH,KAWFV,cAzEO,SAyEM,GACX,OAAOvJ,KAAKqD,eAAe,EAApB,KAAqC,CAACrD,KAAK0D,QAAlD,MAEFiH,WA5EO,WA4EG,WACR,OAAO3K,KAAKqD,eAAe,MAAO,CAChCC,YADgC,yBAEhCrD,WAAY,CAAC,CACXJ,KADW,QAEXqB,MAAO,CACLqE,MAAQ,SAAAD,GAAD,OAAmB,kBAAsB,EAD3C,eAELsB,KAAO,SAAAtB,GAAD,OAAmB,kBAAsB,EAF1C,cAGLD,IAAM,SAAAC,GAAD,OAAmB,kBAAsB,EAAtB,gBAG5B6E,IAAK,WACJ,CAACnK,KAXJ,gBAaF4K,mBA1FO,SA0FW,SAChB,IAAMC,EAAO3I,GAAG,EAAhB,EACM4I,EAAoBD,EAAA,GACvB,SAAA1I,GAAA,EAAD,GAAkCiH,EADpC,QAGA,OAAOyB,EAAO7E,KAAA,IAASA,KAAA,MAA4BoD,EAAA,QAAiBA,EAAtD,SAAd,IAEF2B,aAjGO,SAiGK,GACV/K,KAAA,0BACAA,KAAA,aAEFqK,SArGO,WAuGDrK,KAAJ,cAEAA,KAAA,aAEFgL,aA3GO,SA2GK,GAAe,IACjB3B,EAAYrJ,KAApB,MAAQqJ,QAERrJ,KAAA,OAAcA,KAAKmJ,aAAe7D,EAAlC,YAEA+D,EAAA,uCACAA,EAAA,6CAEF4B,YAnHO,SAmHI,GACTjL,KAAA,aAAoBA,KAAKkJ,OAAS5D,EAAlC,YAEF4F,WAtHO,WAsHG,MACqBlL,KAA7B,MAAM,EADE,EACF,QAAW2F,EADT,EACSA,QACXwF,EAAkB9B,EAAA,YAAsB1D,EAA9C,YAEA0D,EAAA,qCACAA,EAAA,qCAEIrJ,KAAKiC,SAAT,IAEMjC,KAAKmJ,aAAe,IAAMnJ,KAA9B,cACEA,KAAA,eACSA,KAAKmJ,eAAT,IACLnJ,KAAA,iBAIEA,KAAKmJ,aAAe,IAAMnJ,KAA9B,cACEA,KAAA,eACSA,KAAKmJ,cAAT,IACLnJ,KAAA,iBAINoL,cA7IO,SA6IM,KACX9F,EAAA,kBACAtF,KAAA,eAAsBkE,EAAtB,IAEFmH,eAjJO,WAkJArL,KAAL,eAKyB,IAAvBA,KAAKsL,gBACHtL,KAAD,eAAuBA,KAF1B,cAIEA,KAAA,eACSA,KAAJ,aACLA,KAAA,aAAoBA,KAAKuL,wBACvBvL,KAAKwL,aADa,IAElBxL,KAFkB,OAGlBA,KAAKiC,SAHP,KAKSjC,KAAJ,gBACLA,KAAA,aAAoBA,KAAKyL,uBACvBzL,KAAKwL,aADa,IAElBxL,KAFkB,OAGlBA,KAAKiC,SAHa,IAIlBjC,KAJF,iBAQJyL,uBA1KO,SA0Ke,SACpB,IAAMC,EAAcC,EAApB,YACMC,EAAa1J,EACdkH,EAAA,QAAiBuC,EAAjB,WADiB,EAElBA,EAFJ,WAIA,IACEE,MAGF,IAAMC,EAAa1C,EAAA,QAAnB,EACM2C,EAAaL,EAAnB,EACMM,EAAN,GAAyBN,EAQzB,OANIE,GAAJ,EACEC,EAAsB7F,KAAA,IAAS4F,EAAT,EAAtB,GACSE,GAAJ,IACLD,EAAsB7F,KAAA,IAAS6F,GAAuBC,EAAA,EAAhC,GAA6E1C,EAAA,QAAiBA,EAApH,UAGKlH,GAAG,EAAV,GAEFqJ,wBAhMO,SAgMgB,OAA4D,IAC3E,EAAN,EAAM,WAAcG,EAApB,EAAoBA,YAEpB,KAAS,CACP,IAAMO,EAAiB7C,EAAA,UAA8BsC,EAA9B,EAAgDtC,EAAA,QAAvE,EACA,OAAQpD,KAAA,IAASoD,EAAA,QAAiBA,EAA1B,QAA0CpD,KAAA,MAAlD,IAEA,IAAM,EAAiB4F,EAAaF,EAAb,EAA+BtC,EAAA,QAAtD,EACA,OAAOpD,KAAA,IAASoD,EAAA,QAAiBA,EAA1B,QAA0CpD,KAAA,MAAjD,KAGJkG,SA3MO,SA2MC,GACNlM,KAAA,aAAoBA,KAAK4K,mBAAmBN,EAAU,CAEpDjB,QAASrJ,KAAKmM,MAAM9C,QAAUrJ,KAAKmM,MAAM9C,QAAhC,YAF2C,EAGpD1D,QAAS3F,KAAKmM,MAAMxG,QAAU3F,KAAKmM,MAAMxG,QAAhC,YAAsD,GAC9D3F,KAAKiC,SAJY,IAIEjC,KAJtB,eAMFoM,UAlNO,WAkN6B,WAClCpJ,OAAA,uBAA6B,WAAK,MACH,EAA7B,MAAM,EAD0B,EAC1B,QAAW2C,EADe,EACfA,QAEjB,SAAc,CACZ0D,QAASA,EAAUA,EAAH,YADJ,EAEZ1D,QAASA,EAAUA,EAAH,YAAyB,GAG3C,gBAAqB,iBAAsB,SAA3C,QAEA,wBAKNT,OA3VO,SA2VD,GACJ,OAAOM,EAAE,MAAOxF,KAAR,UAAwB,CAC9BA,KAD8B,UAE9BA,KAF8B,aAG9BA,KAHF,e,GAQW2I,EAAA,OAAsB,CACnC9I,KADmC,gBAGnCC,QAHmC,WAIjC,MAAO,CACLuM,WAAYrM,S,uBC1YH,SAAA4I,EAAA,MAAO,EAAD,OAGnB,QAHa,OAKN,CACP/I,KADO,aAGPC,QAHO,WAIL,MAAO,CACLwM,QAAStM,OAIb4B,SAAU,CACRE,QADQ,WAEN,wCACK6G,EAAA,8BADE,OAAP,IAEE,cAFK,EAGL,wBAAyB3I,KAHpB,SAKL,0BAA2BA,KALtB,YAMFA,KAAKuM,gBAKdzJ,MAAO,CACLT,MADK,aAELqH,cAFK,aAGL8C,OAAQ,iBAGVvJ,QAAS,CACPwJ,WADO,WAEAzM,KAAL,UAEAA,KAAA,sBAEFkK,WANO,WAOL,IAAMhF,EAASyD,EAAA,gCAAf,MAKA,OAHAzD,EAAA,KAAcA,EAAA,MAAd,GACAA,EAAA,yCAEA,GAEFwH,cAdO,SAcM,KAEX,IAAI1M,KAAJ,WAEA,IAJsC,EAIhCqC,EAAQrC,KAAd,MACM2M,EAAU1H,EAAhB,KACM2H,EAAUC,EAAhB,KAEIC,GAAJ,EACIC,GAAJ,EATsC,iBAWtC,GAXsC,IAWtC,2BAA0B,KAA1B,EAA0B,QAIxB,GAHIxK,EAAA,KAAJ,EAAyBuK,GAAzB,EACSvK,EAAA,KAAJ,IAAyBwK,GAAA,GAE1BD,GAAJ,EAAsB,OAfc,+BAqBjCA,GAAL,IAAuB9M,KAAK0J,mBAAgB7I,MAIhDqE,OAnEO,SAmED,GACJ,IAAMA,EAASyD,EAAA,yBAAf,GAMA,OAJAzD,EAAA,WAAqB,CACnB8H,KAAM,WAGR,K,wBCxFW,SAAApE,EAAA,qBAAyB,CACtC/I,KADsC,gBAGtCqF,OAHsC,SAGhC,GACJ,OAAOM,EAAE,MAAOxF,KAAKiN,mBAAmBjN,KAAxB,MAAoC,CAClDsD,YAAa,sB,wBCSb4J,EAAa,OAAAtE,EAAA,MAAO,EAAD,YAAzB,QAYe,OAAAsE,EAAA,gBAAoC,CACjDrN,KADiD,SAGjDI,WAAY,CACV4I,OAAA,QAGF1I,MAAO,CACLC,YAAa,CACXC,KADW,OAEXC,QAAS,IAEX6M,eALK,QAMLC,gBANK,OAOLtE,aAPK,QAQLuE,SARK,QASLC,UATK,QAULC,KAVK,QAWL9J,OAAQ,CACNpD,KAAM,CAACsH,OADD,QAENrH,aAASO,GAEX2M,WAfK,QAgBLC,aAhBK,QAiBL/F,iBAAkB,CAACO,OAjBd,QAkBLxH,SAAU,CACRJ,KADQ,OAERC,QAAS,SAEXoN,SAtBK,QAuBL/M,SAAU,CACRN,KADQ,OAERC,QAAS,SAEX8E,MA3BK,QA4BLtE,WAAY,CAACJ,QA5BR,QA6BLiN,YA7BK,OA8BLC,WAAY,CACVvN,KAAM,CAACsH,OADG,QAEVrH,QAAS,GAEXc,SAAUV,SAGZW,KA5CiD,WA6C/C,MAAO,CACL4H,cADK,EAEL4E,OAAQ,CACNpK,OADM,KAEN0B,KAFM,KAGNC,MAHM,KAIN0I,IAJM,KAKNvF,MAAO,MAETwF,eAAgB,MAIpBnM,SAAU,CACRE,QADQ,WAEN,uBACE,2BAA4B9B,KADvB,eAEL,mBAAoBA,KAFf,SAGL,qBAAsBA,KAHjB,UAIL,eAAgBA,KAJX,KAKL,yBAA0BA,KALrB,aAML,gBAAiBA,KANZ,MAOL,mBAAoBA,KAPf,UAQFA,KAAKuM,eAGZyB,WAbQ,WAcN,OAAOhO,KAAKiC,SAASC,KAAOlC,KAA5B,UAEFiO,aAhBQ,WAiBN,MAAO,CACLxK,OAAQ,eAAczD,KAAK6N,OADtB,QAEL1I,KAAMnF,KAAKgO,gBAAanN,EAAY,eAAcb,KAAK6N,OAFlD,MAGLzI,MAAOpF,KAAKgO,WAAa,eAAchO,KAAK6N,OAArC,YAHF,EAILC,IAAK9N,KAAKoB,SAAW,eAAcpB,KAAK6N,OAAnC,UAJA,EAKLK,WAAgC,MAApBlO,KAAK6N,OAAO1I,KAAe,KALlC,OAMLoD,MAAO,eAAcvI,KAAK6N,OAAN,SAGxBM,cA1BQ,WA2BN,OAAInO,KAAJ,MAAuBA,KAAvB,MACSA,KAAKyF,SAAWzF,KAApB,kBACO,YAIhB8C,MAAO,CACLqK,eADK,aAELE,SAFK,aAGLvE,aAHK,aAILwE,UAJK,aAKLC,KALK,aAMLnI,MANK,aAOLtE,WAPK,aAQLM,SARK,aASL,4BATK,WAUL,6BAVK,WAWL,eAAgB,YAGlB2B,QAzGiD,WAyG1C,WACL/C,KAAA,WAAe,WACbgD,OAAA,WAAkB,EAAlB,mBAIJC,QAAS,CACPwJ,WADO,WACG,WACR,OACEzM,KAAKwN,YACJxN,KAAKmM,MADN,OAECnM,KAAKmM,MAAM9J,MAAM+L,cAHpB,QASApO,KAAA,WAAe,WAEb,IAAMqO,EAAY,4BAAlB,GAEA,IAAKA,IAAcA,EAAnB,IAGE,OAFA,sBACA,iBAGF,IAAMlH,EAAKkH,EAAX,IAEA,SAAc,CACZ5K,OAAS,EAAD,SAA2C0D,EADvC,aACaQ,OAAO,EAAxB,YACRxC,KAAM,aAAoBgC,EAFd,WAGZ/B,MAAO,aAAoB+B,EAAA,WAAgBA,EAH/B,YAIZ2G,IAAK3G,EAJO,UAKZoB,MAAO,WAAgBZ,OAAO,EAAvB,YAA0CR,EAAGmH,iBAIxD,IAxBEtO,KAAA,gBACA,IAyBJuO,OAjCO,SAiCD,KAAsC,WACpClN,EAAO,CACXmC,MAAO,CACLC,OAAQ,eAAczD,KAAD,SAEvBG,MAAO,CACLC,YAAaJ,KADR,YAEL8I,aAAc9I,KAFT,aAGLwO,KAAMxO,KAHD,KAILyO,MAAOzO,KAJF,MAKLQ,WAAYR,KALP,SAML0H,iBAAkB1H,KANb,iBAOLS,SAAUT,KAPL,SAQLW,SAAUX,KARL,SASLc,WAAYd,KATP,WAULkB,MAAOlB,KAAK0J,eAEd1F,GAAI,CACF,cAAehE,KADb,WAEF0O,OAAS,SAAAzJ,GACP,oBAGJkF,IAAK,SAMP,OAHAnK,KAAA,aAAkBA,KAAlB,iBACAA,KAAA,mBAAwBA,KAAxB,mBAEOA,KAAKqD,eAAesL,EAAUtN,EAAM,CACzCrB,KAAK4O,UADoC,GAA3C,KAKFC,SAnEO,SAmEC,KAAoC,WAG1C,WAIKtM,EAAL,OAEOvC,KAAKqD,eAAeyL,EAApB,KAAgC,CACrC3O,MAAO,CACLe,MAAOlB,KAAK0J,eAEd1F,GAAI,CACF0K,OAAS,SAAAzJ,GACP,qBANN,GAFyB,OAa3B2J,UAvFO,SAuFE,GACP,OAAI5O,KAAJ,WAA4B,MAE5B,IACE6N,EAAS7N,KAAKqD,eAAe0L,EAAa,CACxC5O,MAAO,CAAE6O,MAAOhP,KAAK2N,gBAIlB3N,KAAKqD,eAAe,MAAO,CAChCC,YADgC,wBAEhCE,MAAOxD,KAAKiO,cACX,CAHH,MAKF5D,SArGO,WAsGDrK,KAAJ,eAEAiP,aAAajP,KAAb,eACAA,KAAA,cAAqBgD,OAAA,WAAkBhD,KAAlB,WAArB,KAEFkP,WA3GO,WAmHL,IAPA,IAAI7M,EAAJ,KACIwL,EAAJ,KACMtL,EAAN,GACM4M,EAAN,GACMpF,EAAO/J,KAAKoD,OAAO9C,SAAzB,GACMoC,EAASqH,EAAf,OAESqF,EAAT,EAAgBA,EAAhB,EAA4BA,IAAK,CAC/B,IAAM7H,EAAQwC,EAAd,GAEA,GAAIxC,EAAJ,iBACE,OAAQA,EAAA,8BAAR,MACE,oBAAsBsG,EAAA,EACpB,MACF,mBAAqBxL,EAAA,EACnB,MACF,iBAAmBE,EAAA,QACjB,MAEF,QAAS4M,EAAA,aAGXA,EAAA,QAUJ,MAAO,CAAEA,MAAKtB,SAAQxL,QAAOE,UAIjC2C,OA/PiD,SA+P3C,GAAG,MAC8BlF,KAArC,aAAM,EADC,EACD,MADC,EACD,SADC,EACD,MAAsBuC,EADrB,EACqBA,KAE5B,OAAOiD,EAAE,MAAO,CACdlC,YADc,SAEdC,MAAOvD,KAFO,QAGdC,WAAY,CAAC,CACXJ,KADW,SAEXwP,UAAW,CAAEC,OAAO,GACpBpO,MAAOlB,KAAKqK,YAEb,CACDrK,KAAKuO,OAAOY,EADX,GAEDnP,KAAK6O,SAASxM,EAVhB","file":"js/chunk-64968f44.2adc065c.js","sourcesContent":["// Styles\nimport './VWindow.sass'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue/types/vnode'\nimport { PropType } from 'vue'\nimport { TouchHandlers } from 'vuetify/types'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n\n  provide (): object {\n    return {\n      windowGroup: this,\n    }\n  },\n\n  directives: { Touch },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      default: '$prev',\n    },\n    reverse: {\n      type: Boolean,\n      default: undefined,\n    },\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object as PropType<TouchHandlers>,\n    touchless: Boolean,\n    value: {\n      required: false,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      changedByDelimiters: false,\n      internalHeight: undefined as undefined | string, // This can be fixed by child class.\n      transitionHeight: undefined as undefined | string, // Intermediate height during transition.\n      transitionCount: 0, // Number of windows in transition state.\n      isBooted: false,\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    isActive (): boolean {\n      return this.transitionCount > 0\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover,\n      }\n    },\n    computedTransition (): string {\n      if (!this.isBooted) return ''\n\n      const axis = this.vertical ? 'y' : 'x'\n      const reverse = this.$vuetify.rtl && axis === 'x' ? !this.internalReverse : this.internalReverse\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    },\n    hasActiveItems (): boolean {\n      return Boolean(\n        this.items.find(item => !item.disabled)\n      )\n    },\n    hasNext (): boolean {\n      return this.continuous || this.internalIndex < this.items.length - 1\n    },\n    hasPrev (): boolean {\n      return this.continuous || this.internalIndex > 0\n    },\n    internalIndex (): number {\n      return this.items.findIndex((item, i) => {\n        return this.internalValue === this.getValue(item, i)\n      })\n    },\n    internalReverse (): boolean {\n      return this.reverse ? !this.isReverse : this.isReverse\n    },\n  },\n\n  watch: {\n    internalIndex: 'updateReverse',\n  },\n\n  mounted () {\n    window.requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    genContainer (): VNode {\n      const children = [this.$slots.default]\n\n      if (this.showArrows) {\n        children.push(this.genControlIcons())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        class: {\n          'v-window__container--is-active': this.isActive,\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight,\n        },\n      }, children)\n    },\n    genIcon (\n      direction: 'prev' | 'next',\n      icon: string,\n      fn: () => void\n    ) {\n      return this.$createElement('div', {\n        staticClass: `v-window__${direction}`,\n      }, [\n        this.$createElement(VBtn, {\n          props: { icon: true },\n          attrs: {\n            'aria-label': this.$vuetify.lang.t(`$vuetify.carousel.${direction}`),\n          },\n          on: {\n            click: () => {\n              this.changedByDelimiters = true\n              fn()\n            },\n          },\n        }, [\n          this.$createElement(VIcon, {\n            props: { large: true },\n          }, icon),\n        ]),\n      ])\n    },\n    genControlIcons () {\n      const icons = []\n\n      const prevIcon = this.$vuetify.rtl\n        ? this.nextIcon\n        : this.prevIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasPrev &&\n        prevIcon &&\n        typeof prevIcon === 'string'\n      ) {\n        const icon = this.genIcon('prev', prevIcon, this.prev)\n        icon && icons.push(icon)\n      }\n\n      const nextIcon = this.$vuetify.rtl\n        ? this.prevIcon\n        : this.nextIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasNext &&\n        nextIcon &&\n        typeof nextIcon === 'string'\n      ) {\n        const icon = this.genIcon('next', nextIcon, this.next)\n        icon && icons.push(icon)\n      }\n\n      return icons\n    },\n    getNextIndex (index: number): number {\n      const nextIndex = (index + 1) % this.items.length\n      const item = this.items[nextIndex]\n\n      if (item.disabled) return this.getNextIndex(nextIndex)\n\n      return nextIndex\n    },\n    getPrevIndex (index: number): number {\n      const prevIndex = (index + this.items.length - 1) % this.items.length\n      const item = this.items[prevIndex]\n\n      if (item.disabled) return this.getPrevIndex(prevIndex)\n\n      return prevIndex\n    },\n    next () {\n      this.isReverse = this.$vuetify.rtl\n\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return\n\n      const nextIndex = this.getNextIndex(this.internalIndex)\n      const item = this.items[nextIndex]\n\n      this.internalValue = this.getValue(item, nextIndex)\n    },\n    prev () {\n      this.isReverse = !this.$vuetify.rtl\n\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return\n\n      const lastIndex = this.getPrevIndex(this.internalIndex)\n      const item = this.items[lastIndex]\n\n      this.internalValue = this.getValue(item, lastIndex)\n    },\n    updateReverse (val: number, oldVal: number) {\n      if (this.changedByDelimiters) {\n        this.changedByDelimiters = false\n        return\n      }\n\n      this.isReverse = val < oldVal\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-window',\n      class: this.classes,\n      directives: [] as VNodeDirective[],\n    }\n\n    if (!this.touchless) {\n      const value = this.touch || {\n        left: () => {\n          this.$vuetify.rtl ? this.prev() : this.next()\n        },\n        right: () => {\n          this.$vuetify.rtl ? this.next() : this.prev()\n        },\n        end: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n        start: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n      }\n\n      data.directives.push({\n        name: 'touch',\n        value,\n      })\n    }\n\n    return h('div', data, [this.genContainer()])\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          this.isOverflowing\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          this.isOverflowing\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakpoint: [String, Number],\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: [Boolean, String],\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakpoint: this.mobileBreakpoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}