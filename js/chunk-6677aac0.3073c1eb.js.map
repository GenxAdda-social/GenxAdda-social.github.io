{"version":3,"sources":["webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["baseMixins","name","props","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","computed","classes","this","noResizeHandle","watch","lazyValue","$nextTick","mounted","setTimeout","methods","calculateInputHeight","input","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","e","inserted","callback","binding","options","passive","window","el","unbind","Resize","mixins","allowOverflow","light","dark","maxWidth","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","data","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","activator","top","left","bottom","right","width","offsetTop","scrollHeight","offsetLeft","content","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","stackMinZIndex","computedLeft","a","c","activatorLeft","attach","computedTop","hasActivator","$slots","$scopedSlots","disabled","val","isActive","beforeMount","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","deactivate","genActivatorListeners","listeners","onClick","getInnerHeight","document","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","cb","startTransition","Promise","resolve","updateDimensions","provide","isInMenu","theme","directives","ClickOutside","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","offsetX","offsetY","openOnHover","origin","transition","Boolean","calculatedTopAuto","defaultOffset","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","find","tile","styles","transformOrigin","activeZIndex","next","prev","classList","remove","created","$attrs","hasOwnProperty","calcScrollPosition","$el","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","closeConditional","target","contains","genActivatorAttributes","attributes","id","genTransition","$createElement","genDirectives","value","handler","include","genContent","attrs","role","staticClass","class","menuable__content__active","contentClass","ref","on","click","keydown","$listeners","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","onResize","clearTimeout","render","arg","h","showLazyContent","root"],"mappings":"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","file":"js/chunk-6677aac0.3073c1eb.js","sourcesContent":["// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n"],"sourceRoot":""}